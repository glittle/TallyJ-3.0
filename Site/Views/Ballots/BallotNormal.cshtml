@using TallyJ.Code.Enumerations
@using TallyJ.Code.Resources
@using TallyJ.Code.Session
@using TallyJ.EF
@model IBallotModel
@{
  ViewBag.Title = "Ballots";
  ViewBag.Message = "Tally the votes";

  ContextItems.AddJavascriptForPage("ballotPage.controllerUrl={0};".FilledWith(Url.Action("Index").QuotedForJavascript()));
  ContextItems.AddJavascriptForPage("ballotPage.frontDeskUrl={0};".FilledWith(Url.Action("Index", "Before").QuotedForJavascript()));
  ContextItems.AddJavascriptForPage("ballotPage.peopleUrl={0};".FilledWith(@Url.Action("Index", "People").QuotedForJavascript()));
  ContextItems.AddJavascriptForPage("ballotPage.invalidReasons={0};".FilledWith(IneligibleReasonEnum.InvalidReasonsJsonString()));
  ContextItems.AddJavascriptForPage("ballotPage.BallotInfo={0};".FilledWith(Model.CurrentBallotInfo().SerializedAsJsonString()));
  ContextItems.AddJavascriptForPage("ballotPage.Ballots={0};".FilledWith(Model.CurrentBallotsInfoList().SerializedAsJsonString()));
  ContextItems.AddJavascriptForPage("ballotPage.BallotStatus={0};".FilledWith(BallotStatusEnum.Listing.SerializedAsJsonString()));
  ContextItems.AddJavascriptForPage("ballotPage.Location={0};".FilledWith(ContextItems.LocationModel.CurrentBallotLocationJsonString()));
  ContextItems.AddJavascriptForPage("ballotPage.HasLocationsWithOnline={0};".FilledWith(ContextItems.LocationModel.HasMultipleLocations.SerializedAsJsonString()));
  ContextItems.AddJavascriptForPage("ballotPage.HasLocationsWithoutOnline={0};".FilledWith(ContextItems.LocationModel.HasSomePhysicalLocations.SerializedAsJsonString()));
  ContextItems.AddJavascriptForPage("ballotPage.isGuest={0};".FilledWith(UserSession.IsGuestTeller.SerializedAsJsonString()));
}
<script src="@ClientFile("~/Scripts/PeopleHelper.js")" type="text/javascript"></script>
<div class="PullInstructionsHandle btn btn-mini">Instructions & Tips</div>
<div class="PullInstructions">
  <ol>
    <li class="onlyPhysicalLocation">
      Each paper ballot needs to be recorded here.
    </li>
    <li>
      A ballot is automatically saved as votes are added or modified.
    </li>
    <li>
      Duplicate names will be noticed and marked.
    </li>
    <li class="onlyPhysicalLocation">
      Be sure to update your Location's information to indicate the status of
      your counting process, and the Contact Info in case the head teller needs to contact
      you.
    </li>
    <li class="onlyVirtualLocation">
      For online ballots requiring finishing, click a vote to select it. Click "Find" to search for the full name or
      the F or L buttons to search by just the First or Last name. Click again to copy fewer letters!
    </li>
    <li class="onlyVirtualLocation">
      Please note that the "Online Ballot #" is a random number and may change whenever any new online ballots are processed.
    </li>
    <li class="onlyPhysicalLocation">
      To delete a ballot, first delete all the votes on the ballot.
    </li>
  </ol>
</div>
<div data-comment="empty div"></div>
<div class="Panels">
  <div class="sidePanel">
    <div id="accordion">
      @if (ContextItems.LocationModel.HasSomePhysicalLocations)
      {
        <h3 class="LocationStatusH3">Location Status<span class="LocationStatus"></span></h3>
        <div class="locationInfo">
          <div>
            <select id="ddlLocationStatus" data-name="TallyStatusCode" size="@LocationStatusEnum.Count">
              @LocationStatusEnum.ForHtmlSelect(UserSession.CurrentLocation)
            </select>
          </div>
          <div class="heading">
            Contact Info:
          </div>
          <div>
            <input id="txtContact" class="txtContact" maxlength="250" data-name="ContactInfo" />
          </div>
        </div>
      }
      <h3>
        <span>Ballots</span> @if (ContextItems.LocationModel.HasMultiplePhysicalLocations)
        {
          <span class="where">
            <span>-</span> <span class="LocationName" data-name="Name"></span>
          </span>
        }
      </h3>
      <div id="tabBallots" class="locationInfo">
        <div class="float-right">
          <button type="button" id="btnRefreshBallotList" class="btn btn-mini" title="Refresh the list of Ballots">
            Refresh List
          </button>
        </div>
        <div class="ballotDiv1 onlyPhysicalLocation">
          Ballots to enter:
          <input id="txtNumCollected" type="number" min="0" data-name="BallotsCollected" class="txtNumCollected" />
        </div>
        <button id="btnNewBallot2" class="NewBallotBtns btn btn-mini btn-success float-right onlyPhysicalLocation" accesskey="N">
          Start <u>N</u>ew Ballot
        </button>
        <div class="ballotNumEntered">
          Ballots entered (<span id="showingWhat"></span>): <span id="lblNumEntered" class="lblNumEntered"></span>
          <select id="ballotFilter" class="onlyPhysicalLocation">
            <option value="">Show All</option>
            @foreach (var code in new BallotCacher().AllForThisElection.Where(b => b.ComputerCode != ComputerModel.ComputerCodeForOnline).Select(b => b.ComputerCode).Distinct().OrderBy(s => s))
            {
              <option @(UserSession.CurrentBallotFilter == code ? " selected" : "")>@code</option>
            }
          </select>
        </div>
        <div id="ballotList" class="ballotList">
        </div>
      </div>

      <h3><span><span id="ballotHeading"></span> <span class="ballotCode"></span></span></h3>
      <div id="tabNameSearch">
        <div class="action float-right">
          <span id="action"></span><span id="more"></span>
        </div>
        @*<div class="heading">
          Ballot # <span class="ballotCode"></span>
        </div>*@
        <div>
          Search for a <u>p</u>erson:
          <span class="ui-icon ui-icon-info" id="qTipSearch"></span>
        </div>
        <div class="float-right">
          <span class="ui-icon ui-icon-info float-right Clear" id="qTipSpoiled"></span>
          <button id="btnAddSpoiled" type="button" tabindex="2" accesskey="A" class="btn btn-mini btn-warn spoiledBtn float-right">
          </button>
        </div>
        <div class="float-left" id="searchInput">
          <span id="keyTimeShow"></span>
          <input id="txtSearch" accesskey="P" tabindex="1" autocomplete="off" class="input-medium">
        </div>
        <div class="actionHolder Clear">
          <div class="tip1">
            Use &uarr; &darr; keys to move in the list. Press Enter to add.
          </div>
        </div>
        <ul id="nameList" class="nameList"></ul>
      </div>
    </div>

    <div class="FrontDeskUpdated">
      <p>Names have been updated. Click to reload ballots.</p>
      <ul id="updatedNames">

      </ul>
     
      <button type="button" id="btnNamesUpdated" class="btn btn-mini">
        Reload Now
      </button>

    </div>

    <div class="nameListKey">
      <h5>Tips and Samples for name search results</h5>
      <ul class="nameList">
        <li>
          <span class="ShowVote" style="width:48%"></span>
          Has votes in this election (blue bar)
        </li>
        <li>
          <span class="InUse">Is on this ballot (checkmark)</span>
        </li>
        <li class="selected">Selected in the list (use &uarr; &darr; to select)</li>
        <li>
          <span class="CannotReceiveVotes">Any votes for this person will be spoiled</span>
        </li>
        <li class="Match5">
          <span>Matched by <b>fi</b>rst <b>l</b>etters</span>
        </li>
        <li class="Match4">
          <span>Matched by <i>sound</i> or middl<b>e</b> l<b>e</b>tt<b>e</b>rs</span>
        </li>
      </ul>
    </div>
  </div>
  <div id="votesPanel" class="votesPanel">
    <div class="ballotStatus"></div>
    <div class="titleDiv">
      <div class="float-right">
        Ballot # <span class="ballotCode"></span>
      </div>
      <span class="VoteNum">#</span> Names on the ballot
    </div>
    <div id="votesList">
    </div>
    <div class="showAll"><label>Show all with no scroll bar?<input type="checkbox" id="cbShowAll"></label></div>
    <button type="button" id="btnDeleteBallot" class="btn btn-mini btn-primary" title="Delete after all votes have been deleted">
      Delete this empty Ballot
    </button>
    <button type="button" id="btnNewBallot" class="NewBallotBtns btn btn-mini btn-success"
            accesskey="N" tabindex="2">
      Start <u>N</u>ew Ballot
    </button>
    <button type="button" id="btnCloseBallot" class="btn btn-mini"
            accesskey="L" tabindex="2">
      C<u>l</u>ose Ballot
    </button>
    @*<button type="button" id="btnAddToThis" class="btn btn-mini">
        Add Votes to Ballot
      </button>*@
    <button type="button" id="btnRefreshBallot" class="btn btn-mini" title="Reload this ballot. Can be used any time, especially if vote lines and numbers appear to be wrong.">
      Reload Ballot
    </button>
    <span class="ui-icon ui-icon-info" id="qTipReload"></span>

    <div class="review">
      <label for="cbReview">
        If this ballot needs review by the head teller, tick here
      </label><input type="checkbox" id="cbReview" />
    </div>
  </div>
  <div id="addMissingPanel" class="votesPanel">
    <h3>
      Adding Name Not in List
    </h3>
    <button id="btnCancelAddMissing" type="button" class="btn btn-warning">
      Cancel
    </button>
    @{ Html.RenderPartial("~/Views/Setup/EditPerson.cshtml", new SetupModel()); }
  </div>
</div>

<script type="text/x-template" id="NormalVoteLine">
  <div class="VoteHost{Fake} withRaw{hasRawVote} rawDone{rawDone} Changed{changed} Valid{invalid} Invalid{invalidType} {ExtraClass}" id="V{vid}" data-vote-id="{vid}" data-person-id="{pid}">
    <div class="rawVote">
      <span>
        <button class="btn btn-mini btnFind show{hasFL}" title="Click multiple times to widen the search">Find Both</button>
      </span>
      <div class="names">
        <span>
          <button class="btn btn-mini btnFindPart btnFindF show{hasFirst}" title="Click multiple times to widen the search">Find</button>
          <span class="F">{rawFirst}</span>
        </span>
        <span>
          <button class="btn btn-mini btnFindPart btnFindL show{hasFirst}" title="Click multiple times to widen the search">Find</button>
          <span class="L">{rawLast}</span>
        </span>
      </div>
      <div class="other">
        <button class="btn btn-mini btnFindPart btnFindO show{hasOtherInfo}" title="Click multiple times to widen the search">Find</button>
        <span class="O">{rawOtherInfo}</span>
      </div>
    </div>
    <div class="Top">
      <span class="VoteNum">{pos}</span>
      <span class="NameInfo">
        <span class="Duplicate">Duplicate: </span>
        <span class="Invalid">Spoiled: </span>
        <span class="Name">{^Display}</span>
        <select class="Invalid InvalidCustom" data-invalid="{invalid}" tabindex="1" size="1">
          {^InvalidReasons}
        </select>
      </span>
      <span class="icons">
        <span class="ui-icon ui-icon-arrow-2-n-s" title="Change the vote order"></span>
        <span class="ui-icon ui-icon-trash" title="Delete this vote from this ballot"></span>
      </span>
    </div>
    <div class="Invalid InvalidPerson">{InvalidDescription}</div>
    <div class="ChangedMessage">
      This person's identifying information was changed since this vote was recorded. Please verify that this is still for the same person as recorded on the paper ballot!
      <button type="button" class="btnClearChangeError">Verified correct</button>
    </div>
  </div>
</script>