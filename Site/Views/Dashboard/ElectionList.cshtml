@using TallyJ.Code.Resources
@using TallyJ.Code.Session
@model ElectionsListViewModel
@{
  ViewBag.Title = "Elections";
  ViewBag.Message = "Select or create an election";
  ViewBag.HideMenus = "true";

  ContextItems.AddJavascriptForPage("electionListPage.electionsUrl={0};".FilledWith(@Url.Action("Index", "Elections").QuotedForJavascript()));
  ContextItems.AddJavascriptForPage("electionListPage.loadElectionUrl={0};".FilledWith(@Url.Action("LoadV2Election", "Dashboard").QuotedForJavascript()));
  ContextItems.AddJavascriptForPage("electionListPage.moreStaticUrl={0};".FilledWith(@Url.Action("MoreInfoStatic", "Dashboard").QuotedForJavascript()));
  ContextItems.AddJavascriptForPage("electionListPage.moreLiveUrl={0};".FilledWith(@Url.Action("MoreInfoLive", "Dashboard").QuotedForJavascript()));
  var electionsInfo = Model.MyElectionsInfo.ToList();
  ContextItems.AddJavascriptForPage("electionListPage.elections={0};".FilledWith(electionsInfo.SerializedAsJsonString()));
  ContextItems.AddJavascriptForPage("electionListPage.importHubUrl={0};".FilledWith(@Url.Action("JoinImportHub", "Elections").QuotedForJavascript()));
}
@section featured {
}
<hgroup class="title">
  <h1>@ViewBag.Title.</h1>
  <h2>@ViewBag.Message</h2>
</hgroup>
<div id="electionListPage" v-cloak>
  @if (electionsInfo.Count > 0)
  {
    <div class="h3button">
      <h3>Your Active and Future Elections</h3>
      <button v-on:click="refreshLive">Refresh</button>
    </div>

    <div class="currentElections">
      <span v-if="loaded && !currentElections.length" class="NoneFound">None found</span>
      @Rows("currentElections")
    </div>

    <div v-if="oldElections.length"
         class="oldElections">
      <div class="h3button">
        <h3 v-if="!hideOld">Other Elections</h3>
        <button v-on:click="toggleOldList" v-text="oldListBtnText"></button>
      </div>

      <div v-if="!hideOld">
        @Rows("oldElections")
      </div>
    </div>


    @helper Rows(string listName)
    {
      <div v-for="e in @listName"
           class="Election"
           :key="e.ElectionGuid"
           :class="{
           current: e.IsCurrent,
           TestElection: e.IsTest,
           SingleName: e.IsSingleNameElection,
           IsFuture: e.IsFuture,
           deleting: e.ElectionGuid === deleting,
           }"
           :ref="'e-' + e.ElectionGuid">
        <div class="TopRow">
          <div class="Detail">
            <div class="Detail1">
              {{e.dateDisplay}}
              <span v-if="e.IsTest" class="Test">TEST</span>
              <span v-else class="NotTest">MAIN</span>
              {{e.Name}}
            </div>
            <div class="Detail2">
              <div>
                <span>{{e.Type}} {{e.Mode}}</span>
                <span class="numVoters" v-text="e.numVoters"></span>
                <span v-if="!e.IsSingleNameElection"
                      class="numBallots"
                      v-text="e.numBallots">
                </span>
              </div>
            </div>
            <div class="tellers">
              <span class="tellerStatus" :title="e.ElectionPasscode">
                Tellers*
                <el-checkbox v-model="e.openForTellers"></el-checkbox>
              </span>
              <span class="names">
                ({{e.tellers.length}}): {{e.tellers.join(', ')}}
              </span>
            </div>

          </div>
          <span class="TopRight" :class="e.TallyStatus">{{e.TallyStatusDisplay}}</span>

        </div>
        <div class="BottomRow">
          <div class="onlineCurrentlyOpen">{{e.OnlineOpen}}</div>
          <div class="buttons">
            <button v-on:click="selectElection(e)"
                    class="btn btn-primary btnSelectElection">
              View
            </button>
            <div class="btn-group">
              <button v-on:click="exportElection(e)"
                      :class="{active: exporting === e.ElectionGuid}"
                      class="btn btn-info btn-mini btnExport"
                      title="Export and download the complete election to a file on your computer">
                Save to File
              </button>
              <button v-on:click="deleteElection(e)"
                      :class="{active: deleting === e.ElectionGuid}"
                      class="btn btn-danger btn-mini btnDelete"
                      title="Delete the election from this system">
                Remove
              </button>
            </div>
          </div>
        </div>
      </div>
    }
  }
  @if (UserSession.IsKnownTeller)
  {
    <h3 class="MakeNew">Preparing for a new Election?</h3>
    <ul class="MakeNewList">
      <li>
        Start a new election:
        <button type="button" class="btn  btn-primary"
                v-on:click="createElection"
                id="btnCreate">
          New Election
        </button>
      </li>
      <li>
        <form name="formLoadFile" id="formLoadFile">
          <label for="loadFile">Or, load a previously saved Election file:</label>
          <input id="loadFile"
                 name="loadFile"
                 v-on:change="upload2"
                 type="file" />
        </form>
        <div class="loadingLog" v-if="loadingElection">
          <div v-html="log"></div>
          <div v-html="tempLog"></div>
        </div>
      </li>
    </ul>
  }
  else if (electionsInfo.Count == 0)
  {
    <p>Sorry, no elections found. Please Log Out and try again.</p>
  }
  @if (UserSession.IsSysAdmin)
  {
    <p>@Html.ActionLink("Sys Admin", "Index", "SysAdmin")</p>
  }
  <p>@Html.ActionLink("Log Out", "Logoff", "Account")</p>
</div>