@using TallyJ.Code.Enumerations
@using TallyJ.Code.Session
@{
  Layout = "~/Views/Shared/_LayoutVoter.cshtml";

  ViewData["ExtraScripts"] = new[]
  {
    ClientFile("~/Scripts/vue{0}.js", ".min"),
    ClientFile("~/Scripts/BadiDateToday.v1.js"),
    ClientFile("~/Scripts/PeopleHelper.js"),
    "//cdn.jsdelivr.net/npm/sortablejs@1.8.4/Sortable.min.js",
    "//cdnjs.cloudflare.com/ajax/libs/Vue.Draggable/2.24.3/vuedraggable.umd.min.js"
  };

  ContextItems.AddJavascriptForPage("voterHome.voteMethods={0};".FilledWith(VotingMethodEnum.AsJsonObject()));
  ContextItems.AddJavascriptForPage("voterHome.ballotStatus={0};".FilledWith(OnlineBallotStatusEnum.AsJsonObject()));
  ContextItems.AddJavascriptForPage("voterHome.electionTypes={0};".FilledWith(ElectionTypeEnum.AsJsonObject()));
  ContextItems.AddJavascriptForPage("voterHome.controllerUrl={0};".FilledWith(Url.Action("Index").QuotedForJavascript()));
  ContextItems.AddJavascriptForPage("voterHome.peopleUrl={0};".FilledWith(Url.Action("Index", "People").QuotedForJavascript()));
  ContextItems.AddJavascriptForPage("voterHome.lastLogin={0};".FilledWith(UserSession.VoterLastLogin == DateTime.MinValue ? "null" : UserSession.VoterLastLogin.SerializedAsJsonString()));

  var x = this.Context.GetOwinContext().Authentication;
}
<div class="forMeditate">
  <button v-on:click="toggleMeditate" v-text="meditate ? 'Resume' : 'Take time to meditate'"></button>
  <div v-if="meditate">
    <a href="https://music.youtube.com/watch?v=wgUhwR1_2Jo&list=PLVjUPCyfyKZ_zkW0krZtj2dTTPllZ81ow" target="music">Show suggested music in YouTube</a>
  </div>
</div>
<div id="voterPage1" v-if="activePage === 1" :class="{meditate: meditate}">
  <div class="top">
    <p>
      Welcome! Your @VoterIdTypeEnum.TextFor(UserSession.VoterIdType).ToLower() is
      <strong>@UserSession.VoterId</strong>.
      <span v-if="!loading">
        <span v-if="elections.length">It is found in the <span v-if="elections.length > 1">{{elections.length}}</span> election<span v-if="elections.length!==1">s</span> shown below.</span>
      </span>
      <span v-if="!loading && !elections.length">It is not found in any elections in TallyJ.</span>
    </p>

    <p v-if="loading">Searching for your email address in available elections...</p>

    <p v-if="!loading">
      If an upcoming election is not listed here, it may not exist in TallyJ or your email address is not registered in it. Please contact the head teller or primary contact for assistance.
    </p>

  </div>
  <p v-if="!loading && elections.length && !atLeastOneOpen" class="noneAvailable">
    None of these elections are available for you to vote in at this time. When an election is available, you will be able to select it.
  </p>
  <div class="electionListDiv">
    <p v-if="!loading && !elections.length" class="noElections">No elections found.</p>
    <table class="electionList" v-if="!loading && elections.length">
      <thead>
        <tr>
          <th class="ename">Election</th>
          <th class="contact">Primary Contact</th>
          <th class="online">Online Voting</th>
          @*<th class="pname">Your Name in the Election</th>*@
          <th class="vmethod">Voting details</th>
          <th class="vtime">Ballot status</th>
        </tr>
      </thead>
      <tbody>
        <tr v-for="e in elections" v-bind:key="e.id" v-bind:class="e.classes">
          <td class="ename">
            <div class="n">{{e.Name}}</div>
            <div class="c">{{e.Date_Display}} - {{e.Convenor}}</div>
            <div class="t">{{e.Type_Display}} Election</div>
          </td>
          <td class="contact">
            <div class="n" v-if="e.EmailFromName">{{e.EmailFromName}}</div>
            <div class="c" v-if="e.EmailFromAddress">{{e.EmailFromAddress}}</div>
            <div class="c" v-if="!e.EmailFromAddress && !e.EmailFromName">(Not set)</div>
          </td>
          <td class="online center" v-html="e.Status_Display"></td>
          @*<td class="pname" v-text="e.person.name"></td>*@
          <td class="vmethod center">
            <div title="Registered Voting Method">{{e.person.VotingMethod_Display}}</div>
            <div v-if="e.openNow && e.canVote">
              <button class="btn" accesskey="P" v-on:click="prepareBallot(e)">Prepare my Ballot</button>
            </div>
            <div class="pname" v-text="e.person.name"></div>
          </td>
          <td class="vtime center" v-bind:class="e.person.Status" v-html="e.person.BallotStatus"></td>
        </tr>
      </tbody>
    </table>
  </div>

  <div class="loginHistoryDiv" v-if="emailCodesLoaded">
    <div class="title">Settings for @UserSession.VoterId</div>
    <p class="emails">
      <button class="btn btn-mini" v-on:click="emailTest">Send me a sample @VoterIdTypeEnum.MessageTypeFor(UserSession.VoterIdType) now</button>
      @*<label><input type="checkbox" v-model="emailWhenOpen" v-on:change="saveEmailCodes" />Send me @VoterIdTypeEnum.MessageTypeAFor(UserSession.VoterIdType) when an election opens that I can vote in.</label>*@
      <label><input type="checkbox" v-model="emailWhenProcessed" v-on:change="saveEmailCodes" />Send me @VoterIdTypeEnum.MessageTypeAFor(UserSession.VoterIdType) when my ballot is processed.</label>
    </p>

    @*<p class="account" v-if="hasLocalId">
        Would you like to change your password? <a class="btn btn-mini" href="@Url.Action("ChangePassword","Manage2")">Change Password</a>
      </p>
      <p class="account" v-else>
        You logged in via @UserSession.VoterAuthSource.
        If others might use your login account, you may wish to add a TallyJ password.
        If you do this, you will need to supply the TallyJ password for all future logins.
        @Html.ActionLink("Add a TallyJ password", "Register", "VoterAccount", null, new { @class = "btn btn-mini" })
      </p>*@

    <div class="title">Activity</div>

    <p>
      For your review and security, here is your recent activity (with the most recent first).
      If something looks wrong, please stop using TallyJ and contact
      @SettingsHelper.Get("TechSupportContactName", "Glen Little") (<a href="mailto:@SettingsHelper.Get("TechSupportContactEmail","glen.little@gmail.com")">@SettingsHelper.Get("TechSupportContactEmail", "glen.little@gmail.com")</a>) with details.
      <button class="btn btn-mini" v-on:click="getLoginHistory">Refresh</button>
    </p>
    <p v-if="loadingLoginHistory">Loading...</p>
    <p v-if="!loadingLoginHistory && !loginHistory.length">Nothing found.</p>
    <div class="loginHistoryScroll" v-if="loginHistory.length">
      <table class="loginHistory">
        <thead>
          <tr>
            <th>Election</th>
            <th>Action</th>
            <th>When</th>
            <th>Time</th>
          </tr>
        </thead>
        <tbody>
          <tr v-for="(lh, i) in loginHistory" v-bind:key="i">
            <td class="election" v-text="lh.ElectionName"></td>
            <td class="details" v-text="lh.Details"></td>
            <td class="nowrap" v-text="lh.age"></td>
            <td class="nowrap" v-text="lh.when"></td>
          </tr>
        </tbody>
      </table>
    </div>

  </div>

  <div class="quotes">
    <p>
      To help you prepare to vote, here are a few online resources about voting in Bahá’í elections:
    </p>
    <div class="quotesList">
      <div><a target="q3" href="https://bahaiquotes.com/index.php/subject/elections">Bahá’í Quotes on Elections (3 web pages)</a></div>
      <div><a target="q2" class="pdf" href="@(new SiteInfo().RootUrl)Content/Docs/ElectionQuotes.pdf">Bahá’í Quotes on Elections (1 page)</a></div>
      <div><a target="q1" class="pdf" href="https://www.bahai.org/library/authoritative-texts/compilations/sanctity-nature-bahai-elections/sanctity-nature-bahai-elections.pdf">The Sanctity and Nature of Bahá’í Elections</a></div>
      <div><a target="q4" class="pdf" href="https://bahai-library.com/pdf/a/abizadeh_how_bahais_vote.pdf">How Bahá’í Voters Should Vote</a> by Arash Abizadeh</div>
    </div>
  </div>


</div>

<div id="voterPage2" v-if="activePage === 2" :class="{locked: savedLock, meditate: meditate}">
  <div class="onImage">
    <div>
      <h2>{{election.Name}}</h2>
      <div class="voterName">{{voterName}}</div>

    </div>

    <div class="electionStatus" :class="election.classes" v-html="election.Status_Display"></div>

    <button class="btn returnBtn" v-on:click="closeBallot">Return</button>
  </div>
  <div class="poolBuilder">
    <div v-if="!savedLock" class="poolHolder">
      <h2>Add to your Pool</h2>
      <p tabindex="0" class="quote">
        "From among the pool of those whom the elector believes to be qualified to serve, selection should be made with due consideration given
        to such other factors as age distribution, diversity, and gender." <cite>Universal House of Justice <a target="q0" href="https://www.bahai.org/r/395026061">(source document)</a></cite>
      </p>
      <div v-if="useList">
        <p id="searchInfo">
          Search for individuals that you believe to be qualified to serve.
          Click to add them to your pool for this election.
        </p>
        <div>
          <label>
            Enter Name:
            <input accesskey="S" ref="searchBox" aria-describedby="searchInfo" type="text" v-model="searchText" v-on:keydown="keyDownInSearch" class="searchBox" />
          </label>
          <button v-on:click="showAll">Show All</button>
          <button accesskey="C" v-on:click="resetSearch">Clear</button>
        </div>

        <div v-show="!nameList.length" class="nameListPlaceholder">
          <span v-if="searchText">No matches found.</span>
          <span v-else>Names will appear here when you search.<br />Click "Show All" to view all in random order.</span>
        </div>
        <ul id="nameList" v-show="nameList.length">
          <li v-for="(p,i) in nameList"
              v-bind:key="p.Id"
              :id="'P' + p.Id"
              v-html="p.HtmlName"
              v-on:click="addToPool(p)"
              v-bind:class="[p.classesList.join(' '), searchResultRow === i ? 'selectResult' : '',  p.CanReceiveVotes ? 'Ok' : 'Ineligible', p.inPool ? 'inPool' : 'notInPool']"
              aria-atomic="true">
          </li>
        </ul>
        <p v-show="nameList.length">
          To select a name using your keyboard while typing, use <strong>Up</strong> and <strong>Down</strong> arrows to move, then <strong>Enter</strong> to select.
        </p>
        <button class="btn addRandomToList" v-if="useRandom" v-on:click="addRandomToList = !addRandomToList">Add someone else...</button>
      </div>
      <form v-if="useRandom && !useList || addRandomToList" class="randomInput">
        <p>Add a new person<span v-if="useList"> (that can't be found by searching)</span> to your pool for this election.</p>
        <div>
          <label>First name</label>
          <input v-model="randomFirst" maxlength="40" type="text" ref="firstInput" placeholder="First" v-on:keyup.enter="addRandomName" />
        </div>
        <div>
          <label>Last name</label>
          <input v-model="randomLast" maxlength="40" type="text" placeholder="Last" v-on:keyup.enter="addRandomName" />
        </div>
        <div>
          <label>Identifying information (optional description)</label>
          <input v-model="randomOtherInfo" class="randomOtherInfo" type="text" maxlength="200" v-on:keyup.enter="addRandomName" />
          <div class="randomNote">
            Use this if the name may not be enough. But remember, your vote is anonymous so do not reference yourself in this description!
          </div>
        </div>
        <div>
          <button class="btn" v-on:click="addRandomName" type="button" :disabled="!canAddRandom">Add Person</button>
          <span class="randomResult">{{randomResult}}</span>
        </div>
      </form>
    </div>

    <div v-bind:class="['poolSide', movingInPool ? 'moving' : '', lockInVotes ? 'locked' : 'open']">
      <h2 v-if="!savedLock" v-text="'Voting'"></h2>
      <p v-if="registration">
        You are registered as having voted: <strong>{{registration}}</strong>.
      </p>
      <div v-if="registration && registration !== 'Online'">
        <p><span class="OtherRegistration">This online ballot below WILL NOT be used because you are registered as voting {{registration}}.</span> </p>
        <p>If that is not correct, please contact the head teller or primary contact for this election before the election is closed.</p>
      </div>
      <p v-if="registration === 'Online' && lockInVotes" aria-live="assertive">
        <strong>You have completed online voting in this election.</strong>
      </p>
      <p v-if="registration === 'Online' && lockInVotes">
        Your ballot will be processed when the head teller closes online voting and
        accepts all online ballots.
      </p>
      <p v-if="!registration && pool.length" aria-live="polite">
        Be sure to submit your ballot before the election closes!
      </p>

      <p class="lockInBtns" v-if="canLockIn || canUnlock">
        <span v-if="canUnlock">Submitted</span>
        <button class="btn btn-primary" accesskey="L" v-on:click="lockIn(true)" v-if="canLockIn">Submit my ballot</button>
        <button class="btn" accesskey="L" v-on:click="lockIn(false)" v-if="canUnlock">Change my ballot</button>
        <span v-if="canLockIn" class="unlocked">(not submitted)</span>
      </p>
      <p v-if="pool.length < numToElect">You must add {{numToElect}} people before submitting your ballot.</p>

      @*<p v-if="!lockInVotes && pool.length">
        Sort this list to move {{numToElect === 1 ? 'someone into the top position' : ('people into any of the top ' + numToElect + ' positions')}} for use on your ballot.
      </p>*@

    <div class="beforePool">
      My Ballot
      <span>(The order of names does not matter)</span>
    </div>

      <draggable class="pool"
                 :class="{movingIntoTop: movingIntoTop}"
                 id="pool1"
                 group="pool" 
                 v-model="poolInCoreBallot" 
                 v-on:change="poolChangedCore" 
                 v-on:end="movingDone"
                 :move="movingStart"
                 :disabled="lockInVotes">

        <div v-for="p in poolInCoreBallot"
             :key="p.Id"
             tabindex="0"
             v-on:keydown="keydownInPool(p, p.index, $event)"
             v-bind:ref="'p' + p.Id"
             v-bind:class="p.classes">
          <span class="num">{{p.index + 1}}</span>
          <div v-html="p.Name"></div>
          <u v-if="p.Area && p.Id > 0" v-text="p.Area"></u>
          <u v-if="p.OtherInfo && p.Id < 0" v-text="p.OtherInfo"></u>
          <span role="button"
                class="removeFromPool"
                v-if="!p.empty"
                v-on:click="removeFromPool(p)"
                aria-label="Delete"
                v-bind:title="'Remove' + (p.Id < 0 ? ' and forget' : '')"></span>
        </div>

      </draggable>
      <div v-if="poolBeyondBallot.length && !savedLock" class="afterPool">
        My pool of others that I'm considering
      </div>

      <draggable class="pool"
                 id="pool2"
                 group="pool" 
                 v-model="poolBeyondBallot"  
                 v-on:change="poolChangedBeyond"                  
                 v-on:end="movingDone"
                 :move="movingStart"
                 :disabled="lockInVotes">

        <div v-for="p in poolBeyondBallot"
             :key="p.Id"
             tabindex="0"
             v-on:keydown="keydownInPool(p, p.index, $event)"
             v-bind:ref="'p' + p.Id"
             v-bind:class="p.classes">
          <span class="num"></span>
          <div v-html="p.Name"></div>
          <u v-if="p.Area && p.Id > 0" v-text="p.Area"></u>
          <u v-if="p.OtherInfo && p.Id < 0" v-text="p.OtherInfo"></u>
          <span role="button"
                class="removeFromPool"
                v-if="!p.empty"
                v-on:click="removeFromPool(p)"
                aria-label="Delete"
                v-bind:title="'Delete from the pool' + (p.Id < 0 ? ' and forget' : '')"></span>
        </div>

      </draggable>



      <p v-if="!lockInVotes && pool.length">
        To sort the names using your keyboard, press <strong>Tab</strong> to focus,
        <strong>Enter</strong> to select/deselect, and <strong>Up</strong> and <strong>Down</strong> arrows to move.
      </p>
      <p v-if="!lockInVotes && pool.length">
        Please note that when your ballot is submitted and processed, this pool will be deleted from TallyJ.
      </p>
      <p class="emptyPoolMsg" v-if="!pool.length && poolLoaded">
        Your pool is empty. Search for people to add!
      </p>
      <p class="emptyPoolMsg" v-if="!poolLoaded">
        Loading...
      </p>
      @*
          not needed - if submitted, don't need paper version
          <div class="printDiv">
          <button class="btn" v-on:click="printBallot">Print Ballot</button>
        </div>*@
  </div>
</div>
</div>