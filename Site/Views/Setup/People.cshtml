@model SetupModel
@using TallyJ.Code.Enumerations
@using TallyJ.Code.Resources
@using TallyJ.Code.Session
@{
  ViewBag.Title = "People";
  ViewBag.Message = "The community";

  ContextItems.AddJavascriptForPage("url", "peoplePage.controllerUrl={0};".FilledWith(Url.Action("Index").QuotedForJavascript()));
  ContextItems.AddJavascriptForPage("peopleUrl", "peoplePage.peopleUrl={0};".FilledWith(Url.Action("Index", "People").QuotedForJavascript()));
  ContextItems.AddJavascriptForPage("namesOnFile", "peoplePage.namesOnFile={0};".FilledWith(Model.NumberOfPeople));
  ContextItems.AddJavascriptForPage("methods", "peoplePage.methods={0};".FilledWith(VotingMethodEnum.AsJsonObject()));
  ContextItems.AddJavascriptForPage("peoplePage.T24={0};".FilledWith(UserSession.CurrentElection.T24.SerializedAsJsonString()));


}
<script src="@ClientFile("~/Scripts/PeopleHelper.js")" type="text/javascript"></script>
<div class="PullInstructionsHandle btn btn-mini">Instructions & Tips</div>
<div class="PullInstructions">
  <ol>
    <li>To edit the information for a person, use this page.</li>
    <li>
      Search for any person by typing a part of their name in the input box below, then
      press Enter when their name is highlighted. Use the Up and Down keys to move through
      the list of matched names.
    </li>
    @if (UserSession.CurrentElection.ElectionType== ElectionTypeEnum.Tie)
    {
      <li>For this tie-break election, those tied should have a status of "Eligible to vote and be voted for" and everyone else "Tie-break: Not tied"</li>
    }
    </ol>
</div>
<div class="sideBySide">
  <div>
    <span id="more"></span>
    <label class="searchlabel" for="txtSearch">Search for a <u>p</u>erson:</label>
    <input id="txtSearch" type="search" placeholder="Search" class="input-medium" accesskey="P"
           autocomplete="off"><span class="ui-icon ui-icon-info" id="qTipSearch"></span>
    <button id="btnShowAll" accesskey="a" class="btn btn-mini" type="button">
      Show <u>A</u>ll
    </button>


    <button id="btnAddNew" class="btn btn-success btn-mini" type="button" accesskey="N">
      Add <u>N</u>ew Person
    </button>
    <ul id="nameList"></ul>
    @*@if (Model.CurrentElection.CanReceive != ElectionModel.CanVoteOrReceive.All)
      {
        <div>
          <button id="btnListTied" type="button">Search for who can be voted for in this election</button>
        </div>
      }*@
    @*@if (Model.CurrentElection.CanVote != ElectionModel.CanVoteOrReceive.All)
      {
        <div>
          <button id="btnListVoters" type="button">Search for who can vote in this election</button>
        </div>
      }*@

  </div>
  <div id="editPanel">
    @RenderPage("EditPerson.cshtml")
  </div>
</div>
