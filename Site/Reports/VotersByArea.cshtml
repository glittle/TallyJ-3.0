@using System.Web;
@using TallyJ.Code.Enumerations
@using TallyJ.Code
@using TallyJ.Code.Session
@using TallyJ.EF
@using TallyJ.CoreModels
@inherits RazorEngine.Templating.TemplateBase
@{
  var election = UserSession.CurrentElection;
  var areas = new PersonCacher().AllForThisElection
    .Where(p => p.CanVote.HasValue && p.CanVote.Value)
    .GroupBy(p => p.Area)
    .OrderBy(g => g.Key)
    .Select(g => new
    {
      Area = g.Key,
      Total = g.Count(),
      Voted = g.Count(p => !string.IsNullOrEmpty(p.VotingMethod)),
      InPerson = g.Count(p => p.VotingMethod == VotingMethodEnum.InPerson.ToString()),
      DroppedOff = g.Count(p => p.VotingMethod == VotingMethodEnum.DroppedOff.ToString()),
      MailedIn = g.Count(p => p.VotingMethod == VotingMethodEnum.MailedIn.ToString()),
      CalledIn = g.Count(p => p.VotingMethod == VotingMethodEnum.CalledIn.ToString()),
      Custom1 = g.Count(p => p.VotingMethod == VotingMethodEnum.Custom1.ToString()),
      Custom2 = g.Count(p => p.VotingMethod == VotingMethodEnum.Custom2.ToString()),
      Custom3 = g.Count(p => p.VotingMethod == VotingMethodEnum.Custom3.ToString()),
      Online = g.Count(p => p.VotingMethod == VotingMethodEnum.Online.ToString()),
      OnlineKiosk = g.Count(p => p.VotingMethod == VotingMethodEnum.Kiosk.ToString()),
      Imported = g.Count(x => x.VotingMethod == VotingMethodEnum.Imported.ToString()),
    })
    .ToList();

  var total = new
  {
    Total = areas.Sum(a => a.Total),
    Voted = areas.Sum(a => a.Voted),
    InPerson = areas.Sum(a => a.InPerson),
    MailedIn = areas.Sum(a => a.MailedIn),
    DroppedOff = areas.Sum(a => a.DroppedOff),
    CalledIn = areas.Sum(a => a.CalledIn),
    Custom1 = areas.Sum(a => a.Custom1),
    Custom2 = areas.Sum(a => a.Custom2),
    Custom3 = areas.Sum(a => a.Custom3),
    Online = areas.Sum(a => a.Online),
    OnlineKiosk = areas.Sum(a => a.OnlineKiosk),
    Imported = areas.Sum(a => a.OnlineKiosk),
  };
  var showCalledIn = total.CalledIn.AsInt() > 0;
  var showCustom1 = total.Custom1.AsInt() > 0;
  var showCustom2 = total.Custom2.AsInt() > 0;
  var showCustom3 = total.Custom3.AsInt() > 0;
  var showOnline = total.Online.AsInt() > 0;
  var showOnlineKiosk = total.OnlineKiosk.AsInt() > 0;
  var showImported = total.Imported.AsInt() > 0;
}
<style>
  .pct {
    color: #909090;
    font-size: 70%;
  }

  table.Areas {
    border-collapse: collapse;
  }

    table.Areas td,
    table.Areas th {
      border: 1px solid grey;
      padding: 0 4px;
      text-align: right;
    }

      table.Areas td.name, table.Areas th.name {
        text-align: left;
      }

    table.Areas tr.pct td {
      text-align: center;
    }

    table.Areas tr.total td {
      border-top: 3px double grey;
    }

  td.voted {
    background-color: #e7e7e7;
  }

  table.Areas tr.total td.name {
    font-weight: bold;
  }
</style>
<div class="body">
  <div class="reportHead">
    <h1 id="title"></h1>
    <div class="byTitle">
      <div>@UserSession.CurrentElectionName</div>
      <div id="titleDate"></div>
    </div>
  </div>
  <p class="Comment">
    Showing the areas of those with a vote method recorded on the Front Desk.
  </p>
  <table class="Areas">
    <thead>
      <tr>
        <th rowspan="2" class="name">Sector/Area</th>
        <th>Adults</th>
        <th>Voted</th>
        <th>In Person</th>
        <th>Mailed In</th>
        <th>Dropped Off</th>
        @if (showCalledIn)
        {
          <th>Called In</th>
        }
        @if (showCustom1)
        {
          <th>@election.Custom1Name</th>
        }
        @if (showCustom2)
        {
          <th>@election.Custom2Name</th>
        }
        @if (showCustom3)
        {
          <th>@election.Custom3Name</th>
        }
        @if (showOnline)
        {
          <th>Online</th>
        }
        @if (showOnlineKiosk)
        {
          <th>Kiosk</th>
        }
        @if (showImported)
        {
          <th>Imported</th>
        }
      </tr>
      <tr class="pct">
        <td>(% of community)</td>
        <td>(% of area adults)</td>
        <td colspan="@(3
                       + (showCalledIn ? 1 : 0)
                       + (showCustom1 ? 1 : 0)
                       + (showCustom2 ? 1 : 0)
                       + (showCustom3 ? 1 : 0)
                       + (showImported ? 1 : 0)
                       + (showOnlineKiosk ? 1 : 0)
                       + (showOnline ? 1 : 0))">
          (% of area voted)
        </td>
      </tr>
    </thead>
    <tbody>
      @if (areas.Count > 1)
      {
        foreach (var area in areas)
        {
          <tr class="area">
            <td class="name">@area.Area</td>
            <td class="total">@area.Total @(area.Total.PercentInSpan(total.Total, 0, true))</td>
            <td class="voted">@area.Voted @area.Voted.PercentInSpan(area.Total, -1, true)</td>
            <td class="method">@area.InPerson @area.InPerson.PercentInSpan(area.Voted, -1, true)</td>
            <td class="method">@area.MailedIn @area.MailedIn.PercentInSpan(area.Voted, -1, true)</td>
            <td class="method">@area.DroppedOff @area.DroppedOff.PercentInSpan(area.Voted, -1, true)</td>
            @if (showCalledIn)
            {
              <td class="method">@area.CalledIn @area.CalledIn.PercentInSpan(area.Voted, -1, true)</td>
            }
            @if (showCustom1)
            {
              <td class="method">@area.Custom1 @area.Custom1.PercentInSpan(area.Voted, -1, true)</td>
            }
            @if (showCustom2)
            {
              <td class="method">@area.Custom2 @area.Custom2.PercentInSpan(area.Voted, -1, true)</td>
            }
            @if (showCustom3)
            {
              <td class="method">@area.Custom3 @area.Custom3.PercentInSpan(area.Voted, -1, true)</td>
            }
            @if (showOnline)
            {
              <td class="method">@area.Online @area.Online.PercentInSpan(area.Voted, -1, true)</td>
            }
            @if (showOnlineKiosk)
            {
              <td class="method">@area.OnlineKiosk @area.OnlineKiosk.PercentInSpan(area.Voted, -1, true)</td>
            }
            @if (showImported)
            {
              <td class="method">@area.Imported @area.Imported.PercentInSpan(area.Voted, -1, true)</td>
            }
          </tr>
        }
      }
      <tr class="total">
        <td class="name">Total</td>
        <td class="total">@total.Total @(total.Total.PercentInSpan(total.Total, 0, true))</td>
        <td class="voted">@total.Voted @total.Voted.PercentInSpan(total.Total, -1, true)</td>
        <td class="method">@total.InPerson @total.InPerson.PercentInSpan(total.Voted, -1, true)</td>
        <td class="method">@total.MailedIn @total.MailedIn.PercentInSpan(total.Voted, -1, true)</td>
        <td class="method">@total.DroppedOff @total.DroppedOff.PercentInSpan(total.Voted, -1, true)</td>
        @if (showCalledIn)
        {
          <td class="method">@total.CalledIn @total.CalledIn.PercentInSpan(total.Voted, -1, true)</td>
        }
        @if (showCustom1)
        {
          <td class="method">@total.Custom1 @total.Custom1.PercentInSpan(total.Voted, -1, true)</td>
        }
        @if (showCustom2)
        {
          <td class="method">@total.Custom2 @total.Custom2.PercentInSpan(total.Voted, -1, true)</td>
        }
        @if (showCustom3)
        {
          <td class="method">@total.Custom3 @total.Custom3.PercentInSpan(total.Voted, -1, true)</td>
        }
        @if (showOnline)
        {
          <td class="method">@total.Online @total.Online.PercentInSpan(total.Voted, -1, true)</td>
        }
        @if (showOnlineKiosk)
        {
          <td class="method">@total.OnlineKiosk @total.OnlineKiosk.PercentInSpan(total.Voted, -1, true)</td>
        }
        @if (showImported)
        {
          <td class="method">@total.Imported @total.OnlineKiosk.PercentInSpan(total.Voted, -1, true)</td>
        }
      </tr>

    </tbody>
  </table>
</div>