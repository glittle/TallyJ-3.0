@using System.Web;
@using TallyJ.Code.Enumerations
@using TallyJ.Code
@using TallyJ.Code.Session
@using TallyJ.EF
@using TallyJ.CoreModels
@inherits RazorEngine.Templating.TemplateBase
@{
  var people = new PersonCacher().AllForThisElection.Where(p => p.CanVote.GetValueOrDefault()).ToList();
  var locations = new LocationCacher().AllForThisElection
    .GroupJoin(people, l => l.LocationGuid, p => p.VotingLocationGuid, (l, pList) => new { l, pList })
    .Select(g => new
    {
      LocationName = g.l.Name,
      Total = g.pList.Count(),
      Voted = g.pList.Count(x => !string.IsNullOrEmpty(x.VotingMethod)),
      InPerson = g.pList.Count(x => x.VotingMethod == VotingMethodEnum.InPerson.ToString()),
      DroppedOff = g.pList.Count(x => x.VotingMethod == VotingMethodEnum.DroppedOff.ToString()),
      MailedIn = g.pList.Count(x => x.VotingMethod == VotingMethodEnum.MailedIn.ToString()),
      CalledIn = g.pList.Count(x => x.VotingMethod == VotingMethodEnum.CalledIn.ToString()),
      Online = g.pList.Count(x => x.VotingMethod == VotingMethodEnum.Online.ToString()),
    })
    .OrderBy(r => r.LocationName)
    .ToList();

  var total = new
  {
    Total = locations.Sum(a => a.Total),
    Voted = locations.Sum(a => a.Voted),
    InPerson = locations.Sum(a => a.InPerson),
    MailedIn = locations.Sum(a => a.MailedIn),
    DroppedOff = locations.Sum(a => a.DroppedOff),
    CalledIn = locations.Sum(a => a.CalledIn),
    Online = locations.Sum(a => a.Online),
  };

  var showCalledIn = total.CalledIn.AsInt() > 0;
  var showOnline = total.Online.AsInt() > 0;
}
<style>
  .pct {
    color: #909090;
    font-size: 70%;
  }

  table.Areas {
    border-collapse: collapse;
  }

    table.Areas td,
    table.Areas th {
      border: 1px solid grey;
      padding: 0 4px;
      text-align: right;
    }

      table.Areas td.name, table.Areas th.name {
        text-align: left;
      }

    table.Areas tr.pct td {
      text-align: center;
    }

    table.Areas tr.total td {
      border-top: 3px double grey;
    }

  td.voted {
    background-color: #e7e7e7;
  }

  table.Areas tr.total td.name {
    font-weight: bold;
  }
</style>
<div class="body">
  <div class="reportHead">
    <h1 id="title"></h1>
    <div class="byTitle">
      <div>@UserSession.CurrentElectionName</div>
      <div id="titleDate"></div>
    </div>
  </div>
  <p class="Comment">
    Showing registration by venue.
  </p>
  <table class="Areas">
    <thead>
      <tr>
        <th rowspan="2" class="name">Venue</th>
        <th>Voters</th>
        <th>In Person</th>
        <th>Mailed In</th>
        <th>Dropped Off</th>
        @if (showCalledIn)
        {
          <th>Called In</th>
        }
        @if (showOnline)
        {
          <th>Online</th>
        }
      </tr>
      <tr class="pct">
        <td>(% of all voters)</td>
        <td colspan="@(3 + (showCalledIn ? 1 : 0) + (showOnline ? 1 : 0))">(% at venue)</td>
      </tr>
    </thead>
    <tbody>
      @if (locations.Count() > 0)
      {
        foreach (var loc in locations)
        {
          if (loc.LocationName == LocationModel.OnlineLocationName)
          {
            <tr class="area">
              <td class="name">@loc.LocationName</td>
              <td class="total">@loc.Total @(loc.Total.PercentInSpan(total.Total, 0, true))</td>
              <td class="method">-</td>
              <td class="method">-</td>
              <td class="method">-</td>
              @if (showCalledIn)
              {
                <td class="method">-</td>
              }
              <td class="method">@loc.Online @loc.Online.PercentInSpan(loc.Voted, -1, true)</td>
            </tr>
          }
          else
          {
            <tr class="area">
              <td class="name">@loc.LocationName</td>
              <td class="total">@loc.Total @(loc.Total.PercentInSpan(total.Total, 0, true))</td>
              <td class="method">@loc.InPerson @loc.InPerson.PercentInSpan(loc.Voted, -1, true)</td>
              <td class="method">@loc.MailedIn @loc.MailedIn.PercentInSpan(loc.Voted, -1, true)</td>
              <td class="method">@loc.DroppedOff @loc.DroppedOff.PercentInSpan(loc.Voted, -1, true)</td>
              @if (showCalledIn)
              {
                <td class="method">@loc.CalledIn @loc.CalledIn.PercentInSpan(loc.Voted, -1, true)</td>
              }
              @if (showOnline)
              {
                <td class="method">-</td>
              }
            </tr>
          }
        }
        <tr class="total">
          <td class="name">Total</td>
          <td class="total">@total.Total @(total.Total.PercentInSpan(total.Total, 0, true))</td>
          <td class="method">@total.InPerson @total.InPerson.PercentInSpan(total.Voted, -1, true)</td>
          <td class="method">@total.MailedIn @total.MailedIn.PercentInSpan(total.Voted, -1, true)</td>
          <td class="method">@total.DroppedOff @total.DroppedOff.PercentInSpan(total.Voted, -1, true)</td>
          @if (showCalledIn)
          {
            <td class="method">@total.CalledIn @total.CalledIn.PercentInSpan(total.Voted, -1, true)</td>
          }
          @if (showOnline)
          {
            <td class="method">@total.Online @total.Online.PercentInSpan(total.Voted, -1, true)</td>
          }
        </tr>
      }
    </tbody>
  </table>

</div>