@using System.Web;
@using TallyJ.Code.Enumerations
@using TallyJ.Code
@using TallyJ.Code.Session
@using TallyJ.EF
@using TallyJ.CoreModels
@inherits RazorEngine.Templating.TemplateBase
@{
  var people = new PersonCacher().AllForThisElection
    .Where(p => p.CanVote.HasValue && p.CanVote.Value)
    // .Where(p => p.IneligibleReasonGuid == null)
    .OrderBy(p => p.FullName)
    .Select(p => new
    {
      PersonName = p.FullName,
      p.VotingMethod,
      p.BahaiId,
      p.VotingLocationGuid,
      p.RegistrationTime
    });

  var locationModel = new LocationModel();

  var hasMultipleLocations = locationModel.HasMultipleLocations;
  var locations = locationModel.GetLocations_All().ToDictionary(l => l.LocationGuid, l => l.Name);
}
<style>
  b {
    display: inline-block;
  }

  tr {
    -moz-page-break-inside: avoid;
    page-break-inside: avoid;
  }

    tr:nth-child(even) {
      background-color: #eee;
    }

  thead {
    display: table-header-group;
    font-weight: bold;
  }

  td {
    padding-left: 2px;
    padding-right: 6px;
    white-space: normal;
  }

  .id {
    white-space: nowrap;
  }

  .person {
    position: relative;
  }

  .name {
    width: 250px;
  }

    .person.first {
      margin-top: .5em;
    }

  .first::first-letter {
    font-weight: bold;
  }

  .method {
  }
</style>
<div class="body">
  <button class="btn btn-mini btnDownloadCsv" data-table=".Voters" type="button" title="Download in CSV format for Excel">Export</button>
  <div class="reportHead">
    <h1 id="title"></h1>
    <div class="byTitle">
      <div>@UserSession.CurrentElectionName</div>
      <div id="titleDate"></div>
    </div>
  </div>  <p class="Comment">
    Shows all potential voters and how they voted.
  </p>
  <table class="Voters">
    <thead>
      <tr>
        <td>Person</td>
        <td>Id</td>
        <td>How</td>
        @if (hasMultipleLocations)
        {
          <td>Where</td>
        }
        <td>When</td>
      </tr>
    </thead>
    <tbody>
      @foreach (var person in people)
      {
      <tr>
        <td class="name">@Raw(person.PersonName)</td>
        <td class="id">@person.BahaiId</td>
        <td class="method">@VotingMethodEnum.TextFor(person.VotingMethod).DefaultTo("-")</td>
        @if (hasMultipleLocations)
        {
          string locName;
          if (!locations.TryGetValue(person.VotingLocationGuid.AsGuid(), out locName))
          {
            <td class="where"></td>
          }
          else
          {
            <td class="where">@locName</td>
          }
        }
        <td class="when">@person.RegistrationTime</td>
      </tr>
      }
    </tbody>
  </table>
</div>
