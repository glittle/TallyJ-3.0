@using System.Web;
@using TallyJ.Code.Enumerations
@using TallyJ.Code
@using TallyJ.Code.Session
@using TallyJ.EF
@using TallyJ.CoreModels
@inherits RazorEngine.Templating.TemplateBase

@{
  var people = new PersonCacher().AllForThisElection
    .Where(p => p.CombinedInfo != p.CombinedInfoAtStart)
    .Select(p => new
    {
      Change = p.CombinedInfoAtStart.HasContent() ? "Changed" : "New",
      p.FirstName,
      p.LastName,
      p.OtherNames,
      p.OtherLastNames,
      p.OtherInfo,
      p.BahaiId,
      p.CanVote,
      p.CanReceiveVotes,
      InvalidReasonDesc = IneligibleReasonEnum.DescriptionFor(p.IneligibleReasonGuid.AsGuid())
    })
    .OrderBy(p => p.Change)
    .ThenBy(p => p.LastName)
    .ThenBy(p => p.FirstName);
}
<style>
  thead {
    display: table-header-group;
    font-weight: bold;
  }

  td {
      padding-left: 2px;
      padding-right: 6px;
    }

  td.Added {
    color: green;
    font-weight: bold;
  }

  td.Changed {
    color: red;
    font-weight: bold;
  }

  td.Spoiled {
  }


  tr {
    -moz-page-break-inside: avoid;
    page-break-inside: avoid;
  }

  table.People {
    margin: 1em;
  }

    table.People tbody td {
      border-top: 1px solid #ddd;
    }
</style>
<div class="body">
  <button class="btn btn-mini btnDownloadCsv" data-table=".People" type="button" title="Download in CSV format for Excel">Export</button>
  <div class="reportHead">
    <h1 id="title"></h1>
    <div class="byTitle">
      <div>@UserSession.CurrentElectionName</div>
      <div id="titleDate"></div>
    </div>
  </div>
  <p class="Comment">
    This shows all people who where added or changed since the list of names was first imported.
  </p>
  <table class="People sortable">
    <thead>
      <tr>
        <td>Update</td>
        <td>Last Name</td>
        <td>First Name</td>
        <td>Eligibility status</td>
        <td>Can Vote</td>
        <td>Can Be Voted For</td>
        <td>Other First Names</td>
        <td>Other Last Names</td>
        <td>Other Info</td>
        <td>Baha'i Id</td>
      </tr>
    </thead>
    <tbody>
      @foreach (var p in people)
      {
        <tr class="person">
          <td class="@p.Change">@p.Change</td>
          <td>@p.LastName</td>
          <td>@p.FirstName</td>
          <td>@p.InvalidReasonDesc</td>
          <td>@Raw(p.CanVote.GetValueOrDefault() ? "Yes" : "No")</td>
          <td>@Raw(p.CanReceiveVotes.GetValueOrDefault() ? "Yes" : "No")</td>
          <td>@p.OtherNames</td>
          <td>@p.OtherLastNames</td>
          <td>@p.OtherInfo</td>
          <td>@p.BahaiId</td>
        </tr>
      }
    </tbody>
  </table>
</div>
